#!/usr/bin/env bash
#
# Copyright 2020 Tymoteusz Blazejczyk
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Exit on error
set -eo pipefail

function color_cyan {
    # Print text with cyan color
    echo -e "\e[1;36m$1\e[0m"
}

function color_yellow {
    # Print text with yellow color
    echo -e "\e[1;33m$1\e[0m"
}

function color_green {
    # Print text with green color
    echo -e "\e[1;32m$1\e[0m"
}

function color_red {
    # Print text with red color
    echo -e "\e[1;31m$1\e[0m"
}

function command_exists {
    # Check if provided command exists
    command -v "$1" 2>&1 >/dev/null
}

function go_format {
    local ARGUMENTS

    # First capture all command line arguments to a separate variable.
    # This will allow to preserve command invocation from unwanted behavior
    ARGUMENTS=${@:-./.}

    # Transform substrings from ... to standard .
    ARGUMENTS=$(echo "$ARGUMENTS" | sed 's/\.\.\././')

    # Go imports formatting
    if command_exists goimports; then
        local OUTPUT

        color_cyan "Running the goimports formatter..."

        OUTPUT=$(goimports -l $ARGUMENTS || true)

        if [[ -z "$OUTPUT" ]]; then
            color_green "All files formatted correctly"
        else
            color_yellow "Go imports are not formatted correctly"

            color_cyan "Listing all ill-formatted files:"
            echo "$OUTPUT"

            color_cyan "Reformatting files..."
            goimports -w $ARGUMENTS
            color_green "All files reformatted"
        fi
    else
        color_red "The goimports tool is not installed"
    fi

    # Go source files formatting
    if command_exists gofmt; then
        local OUTPUT

        color_cyan "Running the gofmt formatter..."

        OUTPUT=$(gofmt -l $ARGUMENTS || true)

        if [[ -z "$OUTPUT" ]]; then
            color_green "All files formatted correctly"
        else
            color_yellow "Go source files are not formatted correctly"

            color_cyan "Listing all ill-formatted files:"
            echo "$OUTPUT"

            color_cyan "Reformatting files..."
            gofmt -w $ARGUMENTS
            color_green "All files reformatted"
        fi
    else
        color_red "The gofmt tool is not installed"
    fi

    return 0
}

go_format $@
